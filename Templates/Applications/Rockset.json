{
  "id": "Rockset",
  "title": "Rockset",
  "version": "1.0.0",
  "_devonly_": true,
  "icon": "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",
  
  "vars":
  {
    "encryptOptions":
    [
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-aes128",
        "display": "XmlEncAES128KeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#aes128-cbc",
        "display": "XmlEncAES128Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-aes192",
        "display": "XmlEncAES192KeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#aes192-cbc",
        "display": "XmlEncAES192Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-aes256",
        "display": "XmlEncAES256KeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#aes256-cbc",
        "display": "XmlEncAES256Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#des-cbc",
        "display": "XmlEncDESUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#Content",
        "display": "XmlEncElementContentUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#Element",
        "display": "XmlEncElementUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#EncryptedKey",
        "display": "XmlEncEncryptedKeyUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#",
        "display": "XmlEncNamespaceUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#rsa-1_5",
        "display": "XmlEncRSA15Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p",
        "display": "XmlEncRSAOAEPUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#sha256",
        "display": "XmlEncSHA256Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#sha512",
        "display": "XmlEncSHA512Url"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#kw-tripledes",
        "display": "XmlEncTripleDESKeyWrapUrl"
      },
      {
        "value": "http://www.w3.org/2001/04/xmlenc#tripledes-cbc",
        "display": "XmlEncTripleDESUrl"
      }
    ],
    "attributeFormatsList":
    [
      {
        "value": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic",
        "display": "Basic"
      },
      {
        "value": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
        "display": "URI"
      },
      {
        "value": "urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified",
        "display": "Unspecified"
      },
      {
        "value": "Base64Encoded",
        "display": "Base64 Encoded"
      },
      {
        "value": "GroupList",
        "display": "Group List"
      }
    ]
  },
  "applicationType": "SAML",
  "templateName": "Rockset",
  "entries":
  {
    "allowAllGroups":
    {
      "states": "Allow every group in your selected data stores to access this application.",
      "controlType": "switch",
      "defaultValue": false,
      "notify":
      {
        "allGroupsAllowed": true,
        "selectGroupsAllowed": false
      }
    },
    "applicationName":
    {
      "defaultValue:t": "$.title",
      "controlType": "input",
      "dataModelName": "name",
      "label": "Application Name",
      "stack": "medium",
      "emptyValue:t": "$.title"
    },
    "applicationDescription":
    {
      "controlType": "input",
      "dataModelName": "description",
      "label": "Application Description"
    },
    "applicationLogo":
    {
      "defaultValue:t": "$.icon",
      "displayOnly@summary": false,
      "controlType": "custom",
      "dataModelName": "logo",
      "componentId": "imageUpload",
      "stack": ":medium",
      "properties":
      {
        "maxFileSize": 2000,
        "allowedTypes":
        [
          "jpeg",
          "png"
        ]
      },
      "properties@summary":
      {
        "displayOnly": true,
        "isSquare": true
      },
      "order":
      [
        "downloadIcon",
        "downloadLabel"
      ]
    },
    "assertionConsumerService":
    {
      "label": "Assertion Consumer Service (ACS)",
      "controlType": "input",
	  "hint": "https://auth.rockset.com/login/callback?connection=<sso_id>",
      "description": "This URL, provided by the service provider, is used to accept a SAML assertion"
    },
    "assertionOffsetMinutes":
    {
      "label": "Offset Minutes",
      "controlType": "input",
	  "defaultValue": 5,
      "type": "number",
      "extras":
      [
        {
          "name": "static:body",
          "content:n": "&nbsp;&nbsp;Minutes&nbsp;"
        },
        "assertionOffsetMinutesTooltip"
      ],
      "extrasAt": "field",
      "width": 3
    },
    "assertionValidHours":
    {
      "controlType": "input",
      "type": "number",
      "extras":
      [
        {
          "name": "static:body",
          "content:n": "&nbsp;&nbsp;Hours&nbsp;"
        }
      ],
      "extrasAt": "field",
      "width": 9,
      "inline": true,
      "stack": "small",
      "emptyValue": "0",
      "modify": {
        "minutesAreZero": {
          "value": "1"
        }
      }
    },
    "assertionValidMinutes":
    {
      "controlType": "input",
      "type": "number",
      "extras":
      [
        {
          "name": "static:body",
          "content:n": "&nbsp;&nbsp;Minutes&nbsp;"
        },
        "assertionValidHoursTooltip"
      ],
      "extrasAt": "field",
      "width": 9,
      "inline": true,
      "stack": "small",
      "emptyValue": "0"
    },
    "attributeFormat":
    {
      "label": "Format",
      "dataModelName": "format",
      "controlType": "select",
      "options:t": "$.vars.attributeFormatsList",
      "modify:c":
      {
        "attributeItemMatch%{local.repeat.index}":
        {
          "enabled": false
        },
        "attributeItemUnmatch%{local.repeat.index}":
        {
          "enabled": true
        }
      }
    },
   "attributeFilterGroup": {
      "label": "Filtered Group",
      "controlType": "input",
      "dataModelName": "filterGroup"
    },
    "attributeName": {
      "label": "Attribute Name",
      "controlType": "input",
      "dataModelName": "name",
      "modify:c": {
        "attributeItemMatch%{local.repeat.index}": {
          "enabled": false
        },
        "attributeItemUnmatch%{local.repeat.index}": {
          "enabled": true
        }
      }
    },
    "attributeNamespace":
    {
      "label": "Namespace (1.1)",
      "controlType": "input",
      "dataModelName": "namespace"
    },
    "attributeNumber":
    {
      "controlType": "input",
      "visible": false,
      "dataModelName": "number"
    },
    "attributeProfileField":
    {
      "label": "Data Store Property",
      "controlType": "select",
      "dataModelName": "property",
      "emptyOption": "",
      "source": "options:dataStoreProperties:dataStoreOptions",
      "defaultValue": "AuthenticatedUserId"
    },
    "audience":
    {
      "label": "Audience",
      "controlType": "input",
	  "hint": "",
	  "visible": false,
      "extras": "audienceTooltip",
      "extrasAt": "field"
    },
    "dataEncryptionMethod":
    {
      "label": "Data Encryption Method",
      "controlType": "select",
      "emptyOption": "",
      "options:t": "$.vars.encryptOptions"
    },
    "dataStores":
    {
      "controlType": "pills",
      "label": "Data Stores",
      "description": "Select the data stores for this application.  Only users in these data stores can access this application.",
      "description@summary": null,
      "extras":
      {
        "name": "other:importance",
        "pad": ":::small",
        "inline": true
      },
      "allowDuplicates": false,
      "stack": "medium",
      "width": 6,
      "source": "data:dataStores:dataStoreInputList",
      "validate": "is.required and is.notEmpty"
    },
    "dataStores@summary":
    {
      "extras": null
    },
	 "encodeToBase64": {
      "controlType": "switch",
      "states": "Encode to Base64",
      "defaultValue": false,
      "visible": false
    },
    "encryptSamlAssertion":
    {
      "states": "Encrypt SAML Assertion",
      "controlType": "switch",
	  "visible": true,	
      "defaultValue": false,
      "modify":
      {
        "encryptSamlAssertionOff":
        {
          "order": null
        },
        "encryptSamlAssertionOn":
        {
          "order": "encryptSamlAssertionCallout"
        }
      },
      "notify":
      {
        "encryptSamlAssertionOff": false,
        "encryptSamlAssertionOn": true
      }
    },
    "groups":
    {
      "controlType": "pills",
      "label": "Groups",
      "description": "Only these groups will have access to this application.",
      "description@summary": null,
      "delimiter": "  ",
      "width": 6,
      "validate": "allowAllGroups:false and is.required and is.notEmpty or allowAllGroups:true",
      "modify":
      {
        "allGroupsAllowed":
        {
          "enabled": false,
          "extras": null
        },
        "selectGroupsAllowed":
        {
          "enabled": true,
          "extras":
          {
            "name": "other:importance",
            "pad": ":::small",
            "inline": true
          }
        }
      }
    },
    "groups@summary":
    {
      "modify": null,
      "extras": null
    },
    "issuer":
    {
      "label": "IdP Issuer",
      "controlType": "input",
      "hint": "sample-issuer",
      "description": "Also known as the IdP Entity ID. This is a unique string that identifies the IdP",
      "description@providersInfo": null,
      "displayOnly@providersInfo": true,
      "stack@providersInfo": "medium",
      "noMargin@providersInfo": true
    },
    "initiationType":
    {
      "label": "Connection Type",
      "controlType": "select",
      "fixedValue": "sp",
	  "enabled": false,
      "width": 7,
      "noMargin": true,
      "options":
      [
        {
          "value": "sp",
          "display": "SP Initiated by Redirect"
        },
        {
          "value": "idp",
          "display": "IdP Initiated"
        }
      ],
      "notify":
      {
        "initiationTypeSP": "sp",
        "initiationTypeIdP": "idp"
      }
    },
    "initiationBy":
    {
      "controlType": "radiogroup",
      "fixedValue": "redirect",
      "noFieldset": true,
      "stack": "small",
      "properties":
      {
        "inline": true,
        "alignment": ":middle",
        "stack": ":medium"
      },
      "options":
      [
        {
          "value": "redirect",
		  "visible": false,	
          "display": "SP Initiated By Redirect"
        },
        {
          "value": "post",
		  "visible": false,
          "display": "By Post",
          "extras": "initiationByTooltip"
        }
      ],
      "modify":
      {
        "initiationTypeSP":
        {
          "visible": true
        },
        "initiationTypeIdP":
        {
          "visible": false
        }
      }
    },
    "keyEncryptionMethod":
    {
      "label": "Key Encryption Method",
      "controlType": "select",
      "emptyOption": "",
      "noMargin": true,
      "options:t": "$.vars.encryptOptions"
    },
    "nameIdFormat":
    {
      "label": "Name ID Format",
      "controlType": "select",
      "defaultValue": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
	  "visible": false,	
      "width": 11,
      "options":
      [
        "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
        "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
        "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
        "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
        "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
        "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
        "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName"
      ]
    },
    "recipient":
    {
      "label": "Recipient",
      "controlType": "input",
	  "visible": false,
      "extras": "recipientTooltip",
      "extrasAt": "field"
    },
    "relayState":
    {
      "label": "Relay State",
      "controlType": "input",
	  "hint": "",
	  "visible": false,	
      "description": "User will be directed to this URL after authentication",
      "extras": "relayStateTooltip",
      "extrasAt": "field"
    },
    "signingAlgorithm":
    {
      "label": "Signing Algorithm",
      "controlType": "radiogroup",
      "defaultValue": "SHA2",
      "noMargin": true,
      "properties":
      {
        "inline": true,
        "stack": "small:medium:small"
      },
      "options":
      [
        "SHA1",
        "SHA2"
      ]
    },
    "signingCert":
    {
      "controlType": "options",
      "defaultValue":
      {
        "issuedTo": "No Certificate Selected",
        "serialNo": "No Certificate Selected"
      },
      "width": 12,
      "emptyContent": "noCertificatesAvailable",
      "columns":
      [
        "issuedTo",
        "issuedBy",
        "expiresOn"
      ],
      "headers":
      [
        "Issued To",
        "Issued By",
        "Expires"
      ],
      "optionAsValue": true,
      "source": "options:applianceCertificates:certificateOptions"
    },
    "signSamlAssertion":
    {
      "states": "Sign SAML Assertion",
      "controlType": "switch",
      "defaultValue": false
    },
    "signSamlMessage":
    {
      "states": "Sign SAML Message",
      "controlType": "switch",
      "defaultValue": true
    },
    "spLoginUrl":
    {
      "label": "Rockset Login URL",
      "controlType": "input",
      "extras": "spLoginUrlTooltip",
	  "hint": "https://console.rockset.com/ ",
      "extrasAt": "field",
      "modify":
      {
        "initiationTypeSP":
        {
          "visible": true
        },
        "initiationTypeIdP":
        {
          "visible": false
        }
      }
    },
    "userIdProfileField":
    {
      "label": "User ID Profile Field",
      "controlType": "select",
      "description": "Select the profile field in your data store that contains your users' IDs.",
      "width": 7,
      "emptyOption": "",
      "source": "options:dataStoreProperties:dataStoreOptions",
      "defaultValue": "AuthenticatedUserId"
    }
  },
  "statics":
  {
    "assertionOffsetMinutesTooltip":
    {
      "content": "This is referred to as \"SAML Not Before\" in the SAML Specification."
    },
    "assertionValidHoursTooltip":
    {
      "content": "This is the time period in which a SAML Assertion is valid. It is referred to as \"SAML Not After\" in the SAML Specification."
    },
    "attributeAddButton":
    {
      "content:n": "&nbsp;&nbsp;Add SAML Attribute",
      "before": "attributeAddIcon",
      "dashed": true,
      "expand": true,
      "clickAction": "attributeItemAdd",
      "modify":
      {
        "attributeItemDisableAdd":
        {
          "disabled": true
        },
        "attributeItemEnableAdd":
        {
          "disabled": false
        }
      },
      "stack": "::small"
    },
    "attributeAddIcon":
    {
      "icon": "add",
      "size": "medium"
    },
    "attributeCallout":
    {
      "after":
      [
        "attributeInfo",
        "attributeNamespace",
        "attributeFormat",
        "attributeFilterGroup"
      ],
      "stack": "::medium"
    },
    "attributeDeleteButton":
    {
      "content": " Delete Attribute",
      "before":
      {
        "name": "static:icon",
        "icon": "remove",
        "type": "destructive",
        "size": "medium"
      },
      "type": "destructive",
      "dashed": true,
      "modify":
      {
        "attributeItemDisableDelete":
        {
          "disabled": true
        },
        "attributeItemEnableDelete":
        {
          "disabled": false
        },
        "attributeItemMatch%{local.repeat.index}": {
          "visible": false
        },
        "attributeItemUnmatch%{local.repeat.index}": {
          "visible": true
        }
      }
    },
    "attributesHeader":
    {
      "content": "SAML ATTRIBUTES",
      "small": true,
      "stack": "large"
    },
    "settingsCallout":
    {
      "after":
      [
        "applicationSettings"
      ]
    },
    "dataStoresAndGroupsHeader":
    {
      "content": "USER DATA STORES AND GROUPS",
      "contentEast":
      {
        "name": "editIcon",
        "clickAction":
        {
          "actions": "edit groups",
          "sendToParent": true
        }
      },
      "small": true,
      "stack": "large"
    },
    "chevronIconRight":
    {
      "staticType": "icon",
      "icon": "chevron-right",
      "size": "medium",
      "clickAction":
      {
        "actions": "see providers",
        "sendToParent": true
      }
    },
    "connectionSettingsHeader":
    {
      "content": "CONNECTION SETTINGS",
      "contentEast":
      {
        "name": "editIcon",
        "clickAction":
        {
          "actions": "edit connection",
          "sendToParent": true
        }
      },
      "small": true,
      "stack": "large"
    },
    "appSettingsHeader":
    {
      "content": "Application Settings",
      "stack": "large"
    },
    "nameForSummary":
    {
      "content:t": "_.name",
      "staticType": "headline",
      "stack": "small"
    },
    "descriptionForSummary":
    {
      "content:t": "_.description",
      "staticType": "color",
      "color": "disabled"
    },
    "audienceTooltip":
    {
      "content": "Audience is a unique string that identifies the Service Provider (SP). Typically this is the Rockset’s entity ID.",
      "pad": ":::small"
    },
    "encryptSamlAssertionCallout":
    {
      "after": "encryptSamlAssertionOptions",
      "stack": "small"
    },
    "defaultHeader":
    {
      "small": true,
      "stack": "large"
    },
    "downloadIcon":
    {
      "staticType": "icon",
      "icon": "upload",
      "size": "medium"
    },
    "downloadLabel":
    {
      "staticType": "text",
      "content": " Upload"
    },
    "editIcon":
    {
      "icon": "pencil",
      "size": "medium"
    },
    "idpSigningCertificateDownloadDesc":
    {
      "staticType": "color",
      "color": "disabled",
      "content:t": "_.signingCertOptions.signingCert.serialNo",
      "wrappers": "body",
      "pad": "small"
    },
    "idpSigningCertificateDownloadHeader":
    {
      "staticType": "label",
      "content": "Idp Signing Certificate"
    },
    "idpDownloadCertificateAction":
    {
      "staticType": "link",
      "content": " Download",
      "className": "sa-vertical-align-middle",
      "before":
      {
        "name": "static:icon",
        "icon": "download",
        "size": "small"
      },
      "clickAction":
      {
        "actions": "download certificate",
        "sendToParent": true
      }
    },
    "initiationByTooltip":
    {
      "content": "The SAML specification allows for SPs to send their authentication requests (AuthnRequest) to the IdP either by HTTP Post or HTTP Redirect. Your SP’s configuration or metadata will tell you what is used for the authentication request.",
      "inline": true,
      "width": "medium",
      "pad": ":::small"
    },
    "initiationTypeInfo":
    {
      "staticType": "fieldset",
      "content": " - ",
      "before":
      [
        "initiationTypeLabel",
        {
          "name": "initiationType",
          "noFieldset": true,
          "inline": true
        }
      ],
      "after":
      {
        "name": "initiationBy",
        "inline": true
      }
    },
    "initiationTypeLabel":
    {
      "content": "Connection Type"
    },
    "loginUrlLink":
    {
      "staticType": "link",
      "content:t": "_.loginURL",
      "href:t": "_.loginURL",
      "target": "_blank"
    },
    "providersCalloutLabel":
    {
      "staticType": "color",
      "content": "Info for service providers",
      "after": "chevronIconRight",
      "style":
      {
        "cursor": "pointer"
      },
      "clickAction":
      {
        "actions": "see providers",
        "sendToParent": true
      }
    },
    "providersCalloutHeader":
    {
      "staticType": "color",
      "color": "info",
      "after":
      [
        "providersCalloutLabel"
      ]
    },
    "providersCalloutDescription":
    {
      "content": "Idp URLs, certificates and metadata files used for integrating with Service Providers.",
      "staticType": "color"
    },
    "providersCallout":
    {
      "type": "info",
      "after":
      [
        "providersCalloutHeader",
        "providersCalloutDescription"
      ]
    },
    "recipientTooltip":
    {
      "content": "This field is typically the same as the consumer URL. It is optional for certain Service Providers.",
      "pad": ":::small"
    },
    "relayStateTooltip":
    {
      "content": "This field is optional for certain applications.",
      "pad": ":::small"
    },
    "realmInfo":
    {
      "content:im": "**Realm:** Secureauth %{_.realmNumber}",
      "color": "disabled",
      "staticType": "color"
    },
    "settingsHeader":
    {
      "content": "CONFIGURE CONNECTION",
      "small": true,
      "stack": "large"
    },
    "signingCertAcceptButton":
    {
      "content": "Select",
      "clickAction": "signingCertModalAccept"
    },
    "signingCertLink":
    {
      "content:n": "Select&nbsp;Certificate",
      "clickAction": "signingCertModalOpen"
    },
    "signingCertName":
    {
      "content:in": "%{_.signingCertOptions.signingCert.issuedTo}&nbsp;&nbsp;&nbsp;",
      "staticType": "body",
      "after": "signingCertLink"
    },
    "signingCertNameFieldset":
    {
      "after":
      [
        {
          "name": "static:label",
          "content": "IdP Signing Certificate",
          "inline": true,
          "pad": ":small"
        },
        {
          "name": "other:importance",
          "inline": true
        },
        "signingCertName"
      ]
    },
    "signingCertSerialNo":
    {
      "content:t": "_.signingCertOptions.signingCert.serialNo",
      "staticType": "body"
    },
    "signingCertSerialNoFieldset":
    {
      "after":
      [
        {
          "name": "static:label",
          "content": "IdP Signing Certificate Serial Number"
        },
        "signingCertSerialNo",
        "signingCertCopy"
      ],
      "stack@providersInfo": "medium"
    },
    "spLoginUrlTooltip":
    {
      "content": "The URL for your users to log into your Rockset instance.",
      "pad": ":::small"
    }
  },
  "layouts":
  {
    "applicationInputs":
    {
      "layoutType": "layout",
      "boxWidth": 6,
      "columns":
      {
        "imageUpload":
        {
          "verticalAlign": "bottom",
          "width": "auto",
          "order": "applicationLogo"
        },
        "applicationInfo":
        [
          "applicationName",
          "applicationDescription"
        ]
      }
    },
    "applicationSettings":
    {
      "layoutType": "layout",
      "columns":
      {
        "imageUpload":
        {
          "verticalAlign": "bottom",
          "width": "auto",
          "order": "applicationLogo"
        },
        "appSummary":
        [
          "nameForSummary",
          "descriptionForSummary",
          "loginUrlLink",
          "realmInfo"
        ],
        "edition":
        {
          "width": "auto",
          "order":
          [
            {
              "name": "editIcon",
              "clickAction":
              {
                "actions": "edit details",
                "sendToParent": true
              }
            }
          ]
        }
      }
    },
    "attributeInfo":
    {
      "layoutType": "grid",
      "columns":
      {
        "attributeProfile":
        {
          "small": 8,
          "order":
          [
            "attributeNumber",
            "attributeName",
            "attributeProfileField"
          ]
        },
        "attributeActions":
        {
          "align": "right",
          "order": "attributeDeleteTooltipConfirm"
        }
      }
    }
  },
  "others":
  {
    "attributeDeleteTooltipConfirm":
    {
      "trigger": "attributeDeleteButton",
      "message": "Are you sure you want to delete this attribute?",
      "action:i": "attributeItemDelete%{local.name}",
      "placement": "top-end"
    },
    "idpIssuerCopy":
    {
      "otherType": "copytoclipboard",
      "copy:t": "_.issuer",
      "stack": "medium"
    },
    "loginUrlCopy":
    {
      "otherType": "copytoclipboard",
      "copy:t": "_.loginURL"
    },
    "logoutUrlCopy":
    {
      "otherType": "copytoclipboard",
      "copy:t": "_.logoutURL"
    },
    "noCertificatesAvailable":
    {
      "otherType": "statemessage",
      "message": "There are no certificates available on the SecureAuth appliance.",
      "info": "Certificates must be managed and uploaded using the Windows Certificates Console on this appliance."
    },
    "noSAMLAttributes":
    {
      "otherType": "statemessage",
      "message": "Add SAML Attributes for your connection",
      "modify":
      {
        "attributeItemEmpty":
        {
          "visible": true
        },
        "attributeItemNotEmpty":
        {
          "visible": false
        }
      }
    },
    "signingCertCopy":
    {
      "otherType": "copytoclipboard",
      "copy:t": "_.signingCertOptions.signingCert.serialNo"
    }
  },
  "windows":
  {
    "signingCertModal":
    {
      "title": "Select Certificate",
      "body": "signingCert",
      "footer": "signingCertAcceptButton",
      "closeButton": "Cancel",
      "size": "large",
      "modify":
      {
        "signingCertModalAccept":
        {
          "isOpened": false
        },
        "signingCertModalClose":
        {
          "isOpened": false
        },
        "signingCertModalOpen":
        {
          "isOpened": true
        }
      }
    }
  },
   "validation":
  {
    "requireSigningCert":
    {
      "constrain":
      {
        "signingCert": "is.required"
      },
      "nested":
      {
        "signingCert":
        {
          "constrain":
          {
            "serialNo": "is.required"
          }
        }
      }
    }
  },
  "groups":
  {
    "attributeItem":
    {
      "logical": true,
      "dataModelName": "attributes",
      "repeat":
      {
        "min": 1,
        "max": 10,
		"match":
        {
          "emailAddress":
          {
            "name": "emailAddress",
            "format": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri"
      }    
}
    }
	},
    "encryptSamlAssertionOptions":
    {
      "logical": true,
      "order":
      [
        "dataEncryptionMethod",
        "keyEncryptionMethod"
      ]
    },
    "assertionWillBeValid":
    {
      "inline": true,
      "order":
      [
        {
          "name": "static:label",
          "content": "Assertion will be valid for:"
        },
        "assertionValidHours",
        "assertionValidMinutes"
      ],
      "notify": {
        "minutesAreZero": {
          "value.assertionValidMinutes": "0",
          "value.assertionValidHours": "0"
        }
      }
    },
    "providerUrls":
    {
      "logical": true,
      "order":
      [
        {
          "name": "static:label",
          "stack": "medium",
          "content": "Login URL"
        },
        {
          "name": "static:paragraph",
          "after": {
            "name": "static:color",
            "color": "disabled",
            "content:t": "_.loginURL"
          }
        },
        "loginUrlCopy",
        {
          "name": "static:label",
          "stack": "medium",
          "content": "Logout URL"
        },
        {
          "name": "static:paragraph",
          "after": {
            "name": "static:color",
            "color": "disabled",
            "content:t": "_.logoutURL"
          }
        },
        "logoutUrlCopy"
      ]
    },
    "signSamlElements":
    {
      "order":
      [
        "signSamlAssertion",
        "signSamlMessage"
      ]
    },
    "signingCertDownload":
    {
      "order":
      [
        "idpSigningCertificateDownloadHeader",
        "idpSigningCertificateDownloadDesc",
        "idpDownloadCertificateAction"
      ],
      "stack": "medium"
    },
    "signingCertOptions":
    {
      "logical": true,
      "order":
      [
        "signingCertModal",
        {
          "name": "signingCert",
          "holdValue": "signingCertModalOpen:signingCertModalClose",
          "visible": false
        },
        "signingCertNameFieldset",
        "signingCertSerialNoFieldset",
        "signingAlgorithm"
      ],
      "pad": "::small",
      "validate": "requireSigningCert"
    },
    "templateRoot":
    {
      "order":
      [
        "settingsHeader",
        "initiationType",
        "initiationBy",
        {
          "name": "defaultHeader",
          "content": "USER ID MAPPING"
        },
        "userIdProfileField",
        "nameIdFormat",
		"encodeToBase64",
        {
          "name": "defaultHeader",
          "content": "SAML ASSERTION"
        },
        "issuer",
        "assertionConsumerService",
        "relayState",
        "recipient",
        "audience",
        "spLoginUrl",
        "assertionWillBeValid",
        "assertionOffsetMinutes",
		"signingCertOptions",
        "signSamlElements",
        "encryptSamlAssertion",
		"attributesHeader",
		"noSAMLAttributes",
		"attributeAddButton",
		"attributeItem"
	  
	  
      ],
      "order@details":
      [
        "applicationInputs",
        "dataStores",
        "groups",
        "allowAllGroups"
      ],
      "order@summary":
      [
        "settingsCallout",
        "appSettingsHeader",
        "dataStoresAndGroupsHeader",
        "dataStores",
        "groups",
        "connectionSettingsHeader",
        "initiationTypeInfo",
        "providersCallout"
      ],
      "order@providersInfo":
      [
        "providerUrls",
        "issuer",
        "idpIssuerCopy",
        "signingCertDownload"
      ],
      "order@updateGroups":
      [
        "dataStores",
        "groups",
        "allowAllGroups"
      ],
      "order@updateDetails":
      [
        "applicationInputs"
      ]
    }
  },
  "views":
  {
    "summary":
    {
      "entries":
      {
        "displayOnly": true
      }
    }
  },
  "order":
  [
    "templateRoot"
  ]
}
